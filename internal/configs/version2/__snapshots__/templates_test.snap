
[TestExecuteTemplateForNGINXOSSTransportServerWithSNI - 1]

upstream cafe-upstream {
    zone cafe-upstream 512k;
    server 10.0.0.20:5001 max_fails=0 fail_timeout= max_conns=0;
}
server {
    listen 1234 ssl;
    listen [::]:1234 ssl;
    server_name "cafe.example.com";
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;
    proxy_requests 1;
    proxy_responses 2;

    proxy_pass cafe-upstream;

    proxy_timeout 10s;
    proxy_connect_timeout 10s;
    proxy_next_upstream on;
    proxy_next_upstream_timeout 10s;
    proxy_next_upstream_tries 5;
}

---

[TestExecuteTemplateForNGINXPlusTransportServerWithSNI - 1]

upstream cafe-upstream {
    zone cafe-upstream 512k;
    server 10.0.0.20:5001 max_fails=0 fail_timeout= max_conns=0;
}


server {
    listen 1234 ssl;
    listen [::]:1234 ssl;
    server_name "cafe.example.com";
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    status_zone ;
    proxy_requests 1;
    proxy_responses 2;

    proxy_pass cafe-upstream;

    

    proxy_timeout 10s;
    proxy_connect_timeout 10s;
    proxy_next_upstream on;
    proxy_next_upstream_timeout 10s;
    proxy_next_upstream_tries 5;
}

---

[TestExecuteTemplateForTransportServerWithBackupServerForNGINXPlus - 1]

upstream udp-upstream {
    zone udp-upstream 512k;
    server 10.0.0.20:5001 max_fails=0 fail_timeout= max_conns=0;
    server clustertwo.corp.local:8080 resolve backup;
}


match match_udp-upstream {
    
    send "GET / HTTP/1.0\r\nHost: localhost\r\n\r\n";
    

    
    expect ~* "200 OK";
    
}
server {

    status_zone udp-app;
    proxy_requests 1;
    proxy_responses 2;

    proxy_pass udp-upstream;

    
    health_check interval=5s  port=8080
        passes=1 jitter=0 fails=1 udp match=match_udp-upstream;
    health_check_timeout 5s;
    

    proxy_timeout 10s;
    proxy_connect_timeout 10s;
    proxy_next_upstream on;
    proxy_next_upstream_timeout 10s;
    proxy_next_upstream_tries 5;
}

---

[TestExecuteTemplateForTransportServerWithResolver - 1]

upstream udp-upstream {
    zone udp-upstream 512k;
    server 10.0.0.20:5001 max_fails=0 fail_timeout= max_conns=0 resolve;
}


match match_udp-upstream {
    
    send "GET / HTTP/1.0\r\nHost: localhost\r\n\r\n";
    

    
    expect ~* "200 OK";
    
}
server {

    status_zone udp-app;
    proxy_requests 1;
    proxy_responses 2;

    proxy_pass udp-upstream;

    
    health_check interval=5s  port=8080
        passes=1 jitter=0 fails=1 udp match=match_udp-upstream;
    health_check_timeout 5s;
    

    proxy_timeout 10s;
    proxy_connect_timeout 10s;
    proxy_next_upstream on;
    proxy_next_upstream_timeout 10s;
    proxy_next_upstream_tries 5;
}

---

[TestExecuteTemplateForTransportServerWithTCPIPListener - 1]

upstream udp-upstream {
    zone udp-upstream 512k;
    server 10.0.0.20:5001 max_fails=0 fail_timeout= max_conns=0;
}


match match_udp-upstream {
    
    send "GET / HTTP/1.0\r\nHost: localhost\r\n\r\n";
    

    
    expect ~* "200 OK";
    
}
server {
    listen 127.0.0.1:1234 ssl udp;
    listen [::1]:1234 ssl udp;

    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    status_zone udp-app;
    proxy_requests 1;
    proxy_responses 2;

    proxy_pass udp-upstream;

    
    health_check interval=5s  port=8080
        passes=1 jitter=0 fails=1 udp match=match_udp-upstream;
    health_check_timeout 5s;
    

    proxy_timeout 10s;
    proxy_connect_timeout 10s;
    proxy_next_upstream on;
    proxy_next_upstream_timeout 10s;
    proxy_next_upstream_tries 5;
}

---

[TestExecuteTemplateForTransportServerWithUDPIPListener - 1]

upstream udp-upstream {
    zone udp-upstream 512k;
    server 10.0.0.20:5001 max_fails=0 fail_timeout= max_conns=0;
}


match match_udp-upstream {
    
    send "GET / HTTP/1.0\r\nHost: localhost\r\n\r\n";
    

    
    expect ~* "200 OK";
    
}
server {
    listen 127.0.0.1:1234 ssl;
    listen [::1]:1234 ssl;

    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    status_zone udp-app;
    proxy_requests 1;
    proxy_responses 2;

    proxy_pass udp-upstream;

    
    health_check interval=5s  port=8080
        passes=1 jitter=0 fails=1 match=match_udp-upstream;
    health_check_timeout 5s;
    

    proxy_timeout 10s;
    proxy_connect_timeout 10s;
    proxy_next_upstream on;
    proxy_next_upstream_timeout 10s;
    proxy_next_upstream_tries 5;
}

---

[TestExecuteVirtualServerTemplateWithAPIKeyPolicyNGINXPlus - 1]

upstream test-upstream {
    zone test-upstream 256k;
    random;
    server 10.0.0.20:8001 max_fails=4 fail_timeout=10s slow_start=10s max_conns=31;
    keepalive 32;
    queue 10 timeout=60s;
    sticky cookie test expires=25s path=/tea;
    ntlm;
}

upstream coffee-v1 {
    zone coffee-v1 256k;
    server 10.0.0.31:8001 max_fails=8 fail_timeout=15s max_conns=2;
}

upstream coffee-v2 {
    zone coffee-v2 256k;
    server 10.0.0.32:8001 max_fails=12 fail_timeout=20s max_conns=4;
}

split_clients $request_id $split_0 {
    50% @loc0;
    50% @loc1;
}
map $match_0_0 $match {
    ~^1 @match_loc_0;
    default @match_loc_default;
}
map $http_x_version $match_0_0 {
    v2 1;
    default 0;
}
# HTTP snippet
limit_req_zone $url zone=pol_rl_test_test_test:10m rate=10r/s;

server {
    listen 80 proxy_protocol;
    listen [::]:80 proxy_protocol;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 443 ssl proxy_protocol;
    listen [::]:443 ssl proxy_protocol;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;
    ssl_client_certificate ingress-mtls-secret;
    ssl_verify_client on;
    ssl_verify_depth 2;
    if ($scheme = 'http') {
        return 301 https://$host$request_uri;
    }

    server_tokens "off";
    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Real-IP;
    real_ip_recursive on;
    allow 127.0.0.1;
    deny all;
    deny 127.0.0.1;
    allow all;
    limit_req_log_level error;
    limit_req_status 503;
    limit_req zone=pol_rl_test_test_test burst=5 delay=10;
    auth_jwt "My Api";
    auth_jwt_key_file jwk-secret;
    js_var $header_query_value "${http_x_header_name}${http_other_header}${arg_myQuery}${arg_myOtherQuery}";
    js_var $apikey_auth_local_map "vs-default-cafe-apikey-policy";
    js_var $apikey_auth_token $apikey_auth_hash;
    auth_request /_validate_apikey_njs;
    app_protect_enable on;
    app_protect_policy_file /etc/nginx/waf/nac-policies/default-dataguard-alarm;
    app_protect_security_log_enable on;
    app_protect_security_log /etc/nginx/waf/nac-logconfs/default-logconf;
    
    app_protect_dos_enable on;
    app_protect_dos_name "my-dos-coffee";
    app_protect_dos_access_file "/etc/nginx/dos/allowlist/default_test.example.com";
    app_protect_dos_policy_file /test/policy.json;
    app_protect_dos_security_log_enable on;
    app_protect_dos_security_log /test/log.json;
    set $loggable '0';
    # app-protect-dos module will set it to '1'  if a request doesn't pass the rate limit
    access_log svc.dns.com:123 log_dos if=$loggable;
    app_protect_dos_monitor uri=test.example.com protocol=http timeout=30;
    # server snippet
    location /split {
        rewrite ^ @split_0 last;
    }
    location /coffee {
        rewrite ^ @match last;
    }
    location @hc-coffee {
        
        proxy_connect_timeout ;
        proxy_read_timeout ;
        proxy_send_timeout ;
        proxy_pass http://coffee-v2;
        health_check uri=/  port=50 interval=5s jitter=0s fails=1 passes=1 mandatory  persistent  keepalive_time=60s;

   }
    location @hc-tea {
        
        grpc_connect_timeout ;
        grpc_read_timeout ;
        grpc_send_timeout ;
        grpc_pass grpc://tea-v3;
        health_check port=50 interval=5s jitter=0s fails=1 passes=1 type=grpc grpc_status=12 grpc_service=tea-servicev2;

   }
    location @vs_cafe_cafe_vsr_tea_tea_tea__tea_error_page_0 {
        
        default_type "application/json";
        
        
        # status code is ignored here, using 0
        return 0 "Hello World";
    }
    
    location @vs_cafe_cafe_vsr_tea_tea_tea__tea_error_page_1 {
        
        
        add_header Set-Cookie "cookie1=test" always;
        
        add_header Set-Cookie "cookie2=test; Secure" always;
        
        # status code is ignored here, using 0
        return 0 "Hello World";
    }
    

    
    location @return_0 {
        default_type "text/html";
        
        # status code is ignored here, using 0
        return 0 "Hello!";
    }
    

    
    location / {
        set $service "";
        status_zone "";
        internal;
        # location snippet
        allow 127.0.0.1;
        deny all;
        deny 127.0.0.1;
        allow all;
        limit_req zone=loc_pol_rl_test_test_test;

        
        proxy_ssl_certificate egress-mtls-secret.pem;
        proxy_ssl_certificate_key egress-mtls-secret.pem;
            
        proxy_ssl_trusted_certificate trusted-cert.pem;
        proxy_ssl_verify on;
        proxy_ssl_verify_depth 1;
        proxy_ssl_protocols TLSv1.3;
        proxy_ssl_ciphers DEFAULT;
        proxy_ssl_session_reuse on;
        proxy_ssl_server_name on;
        proxy_ssl_name ;
        set $header_query_value "${http_x_header_name}${http_other_header}${arg_myQuery}${arg_myOtherQuery}";
        set $default_connection_header close;
        rewrite $request_uri $request_uri;
        rewrite $request_uri $request_uri;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;
        proxy_max_temp_file_size 1024m;

        proxy_buffering on;
        proxy_buffers 8 4k;
        proxy_buffer_size 4k;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header Header;
        proxy_pass_header Host;
        proxy_ignore_headers Cache;
        add_header Header-Name "Header Value" always;
        proxy_pass http://test-upstream$request_uri;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc0 {
        set $service "";
        status_zone "";

        
        set $header_query_value "${http_x_header_name}${http_other_header}${arg_myQuery}${arg_myOtherQuery}";
        error_page 400 500 =200 "@error_page_1";
        error_page 500  "@error_page_2";
        proxy_intercept_errors on;
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v1;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc1 {
        set $service "";
        status_zone "";

        
        set $header_query_value "${http_x_header_name}${http_other_header}${arg_myQuery}${arg_myOtherQuery}";
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v2;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc2 {
        set $service "";
        status_zone "";

        
        set $header_query_value "${http_x_header_name}${http_other_header}${arg_myQuery}${arg_myOtherQuery}";
        error_page 400 = @grpc_internal;
        error_page 401 = @grpc_unauthenticated;
        error_page 403 = @grpc_permission_denied;
        error_page 404 = @grpc_unimplemented;
        error_page 429 = @grpc_unavailable;
        error_page 502 = @grpc_unavailable;
        error_page 503 = @grpc_unavailable;
        error_page 504 = @grpc_unavailable;
        error_page 405 = @grpc_internal;
        error_page 408 = @grpc_deadline_exceeded;
        error_page 413 = @grpc_resource_exhausted;
        error_page 414 = @grpc_resource_exhausted;
        error_page 415 = @grpc_internal;
        error_page 426 = @grpc_internal;
        error_page 495 = @grpc_unauthenticated;
        error_page 496 = @grpc_unauthenticated;
        error_page 497 = @grpc_internal;
        error_page 500 = @grpc_internal;
        error_page 501 = @grpc_internal;
        set $default_connection_header close;
        grpc_connect_timeout 30s;
        grpc_read_timeout 31s;
        grpc_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        grpc_set_header X-Forwarded-Host $host;
        grpc_set_header X-Forwarded-Port $server_port;
        grpc_set_header X-Forwarded-Proto $scheme;
        grpc_pass grpc://coffee-v3;
        grpc_next_upstream ;
        grpc_next_upstream_timeout ;
        grpc_next_upstream_tries 0;
    }
    location @match_loc_0 {
        set $service "";
        status_zone "";

        
        set $header_query_value "${http_x_header_name}${http_other_header}${arg_myQuery}${arg_myOtherQuery}";
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v2;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @match_loc_default {
        set $service "";
        status_zone "";

        
        set $header_query_value "${http_x_header_name}${http_other_header}${arg_myQuery}${arg_myOtherQuery}";
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v1;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location /return {
        set $service "";
        status_zone "";

        
        set $header_query_value "${http_x_header_name}${http_other_header}${arg_myQuery}${arg_myOtherQuery}";
        error_page 418 =200 "@return_0";
        proxy_intercept_errors on;
        proxy_pass http://unix:/var/lib/nginx/nginx-418-server.sock;
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplateWithBackupServerNGINXPlus - 1]

upstream test-upstream {
    zone test-upstream 256k;
    random;
    server 10.0.0.20:8001 max_fails=4 fail_timeout=10s slow_start=10s max_conns=31;
    server clustertwo.corp.local:8080 backup resolve;
    keepalive 32;
    queue 10 timeout=60s;
    sticky cookie test expires=25s path=/tea;
    ntlm;
}

upstream coffee-v1 {
    zone coffee-v1 256k;
    server 10.0.0.31:8001 max_fails=8 fail_timeout=15s max_conns=2;
}

upstream coffee-v2 {
    zone coffee-v2 256k;
    server 10.0.0.32:8001 max_fails=12 fail_timeout=20s max_conns=4;
}

split_clients $request_id $split_0 {
    50% @loc0;
    50% @loc1;
}
map $match_0_0 $match {
    ~^1 @match_loc_0;
    default @match_loc_default;
}
map $http_x_version $match_0_0 {
    v2 1;
    default 0;
}
# HTTP snippet
limit_req_zone $url zone=pol_rl_test_test_test:10m rate=10r/s;

server {
    listen 80 proxy_protocol;
    listen [::]:80 proxy_protocol;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 443 ssl proxy_protocol;
    listen [::]:443 ssl proxy_protocol;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;
    ssl_client_certificate ingress-mtls-secret;
    ssl_verify_client on;
    ssl_verify_depth 2;
    if ($scheme = 'http') {
        return 301 https://$host$request_uri;
    }

    server_tokens "off";
    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Real-IP;
    real_ip_recursive on;
    allow 127.0.0.1;
    deny all;
    deny 127.0.0.1;
    allow all;
    limit_req_log_level error;
    limit_req_status 503;
    limit_req zone=pol_rl_test_test_test burst=5 delay=10;
    auth_jwt "My Api";
    auth_jwt_key_file jwk-secret;
    app_protect_enable on;
    app_protect_policy_file /etc/nginx/waf/nac-policies/default-dataguard-alarm;
    app_protect_security_log_enable on;
    app_protect_security_log /etc/nginx/waf/nac-logconfs/default-logconf;
    
    app_protect_dos_enable on;
    app_protect_dos_name "my-dos-coffee";
    app_protect_dos_access_file "/etc/nginx/dos/allowlist/default_test.example.com";
    app_protect_dos_policy_file /test/policy.json;
    app_protect_dos_security_log_enable on;
    app_protect_dos_security_log /test/log.json;
    set $loggable '0';
    # app-protect-dos module will set it to '1'  if a request doesn't pass the rate limit
    access_log svc.dns.com:123 log_dos if=$loggable;
    app_protect_dos_monitor uri=test.example.com protocol=http timeout=30;
    # server snippet
    location /split {
        rewrite ^ @split_0 last;
    }
    location /coffee {
        rewrite ^ @match last;
    }
    location @hc-coffee {
        
        proxy_connect_timeout ;
        proxy_read_timeout ;
        proxy_send_timeout ;
        proxy_pass http://coffee-v2;
        health_check uri=/  port=50 interval=5s jitter=0s fails=1 passes=1 mandatory  persistent  keepalive_time=60s;

   }
    location @hc-tea {
        
        grpc_connect_timeout ;
        grpc_read_timeout ;
        grpc_send_timeout ;
        grpc_pass grpc://tea-v3;
        health_check port=50 interval=5s jitter=0s fails=1 passes=1 type=grpc grpc_status=12 grpc_service=tea-servicev2;

   }
    location @vs_cafe_cafe_vsr_tea_tea_tea__tea_error_page_0 {
        
        default_type "application/json";
        
        
        # status code is ignored here, using 0
        return 0 "Hello World";
    }
    
    location @vs_cafe_cafe_vsr_tea_tea_tea__tea_error_page_1 {
        
        
        add_header Set-Cookie "cookie1=test" always;
        
        add_header Set-Cookie "cookie2=test; Secure" always;
        
        # status code is ignored here, using 0
        return 0 "Hello World";
    }
    

    
    location @return_0 {
        default_type "text/html";
        
        # status code is ignored here, using 0
        return 0 "Hello!";
    }
    

    
    location / {
        set $service "";
        status_zone "";
        internal;
        # location snippet
        allow 127.0.0.1;
        deny all;
        deny 127.0.0.1;
        allow all;
        limit_req zone=loc_pol_rl_test_test_test;

        
        proxy_ssl_certificate egress-mtls-secret.pem;
        proxy_ssl_certificate_key egress-mtls-secret.pem;
            
        proxy_ssl_trusted_certificate trusted-cert.pem;
        proxy_ssl_verify on;
        proxy_ssl_verify_depth 1;
        proxy_ssl_protocols TLSv1.3;
        proxy_ssl_ciphers DEFAULT;
        proxy_ssl_session_reuse on;
        proxy_ssl_server_name on;
        proxy_ssl_name ;
        set $default_connection_header close;
        rewrite $request_uri $request_uri;
        rewrite $request_uri $request_uri;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;
        proxy_max_temp_file_size 1024m;

        proxy_buffering on;
        proxy_buffers 8 4k;
        proxy_buffer_size 4k;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header Header;
        proxy_pass_header Host;
        proxy_ignore_headers Cache;
        add_header Header-Name "Header Value" always;
        proxy_pass http://test-upstream$request_uri;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc0 {
        set $service "";
        status_zone "";

        
        error_page 400 500 =200 "@error_page_1";
        error_page 500  "@error_page_2";
        proxy_intercept_errors on;
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v1;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc1 {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v2;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc2 {
        set $service "";
        status_zone "";

        
        error_page 400 = @grpc_internal;
        error_page 401 = @grpc_unauthenticated;
        error_page 403 = @grpc_permission_denied;
        error_page 404 = @grpc_unimplemented;
        error_page 429 = @grpc_unavailable;
        error_page 502 = @grpc_unavailable;
        error_page 503 = @grpc_unavailable;
        error_page 504 = @grpc_unavailable;
        error_page 405 = @grpc_internal;
        error_page 408 = @grpc_deadline_exceeded;
        error_page 413 = @grpc_resource_exhausted;
        error_page 414 = @grpc_resource_exhausted;
        error_page 415 = @grpc_internal;
        error_page 426 = @grpc_internal;
        error_page 495 = @grpc_unauthenticated;
        error_page 496 = @grpc_unauthenticated;
        error_page 497 = @grpc_internal;
        error_page 500 = @grpc_internal;
        error_page 501 = @grpc_internal;
        set $default_connection_header close;
        grpc_connect_timeout 30s;
        grpc_read_timeout 31s;
        grpc_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        grpc_set_header X-Forwarded-Host $host;
        grpc_set_header X-Forwarded-Port $server_port;
        grpc_set_header X-Forwarded-Proto $scheme;
        grpc_pass grpc://coffee-v3;
        grpc_next_upstream ;
        grpc_next_upstream_timeout ;
        grpc_next_upstream_tries 0;
    }
    location @match_loc_0 {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v2;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @match_loc_default {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v1;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location /return {
        set $service "";
        status_zone "";

        
        error_page 418 =200 "@return_0";
        proxy_intercept_errors on;
        proxy_pass http://unix:/var/lib/nginx/nginx-418-server.sock;
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplateWithJWKSWithToken - 1]

upstream vs_default_cafe_tea {
    zone vs_default_cafe_tea ;
    server 10.0.0.20:80 max_fails=0 fail_timeout= max_conns=0;
    keepalive 16;
}

upstream vs_default_cafe_coffee {
    zone vs_default_cafe_coffee ;
    server 10.0.0.30:80 max_fails=0 fail_timeout= max_conns=0;
    keepalive 16;
}

proxy_cache_path /var/cache/nginx/jwks_uri_cafe levels=1 keys_zone=jwks_uri_cafe:1m max_size=10m;

server {
    listen 80;
    listen [::]:80;


    server_name cafe.example.com;
    status_zone cafe.example.com;
    set $resource_type "virtualserver";
    set $resource_name "cafe";
    set $resource_namespace "default";

    server_tokens "";
    auth_jwt "Spec Realm API" token=$http_token;
    
    auth_jwt_key_cache 1h;
    auth_jwt_key_request /_jwks_uri_server_default/jwt-policy;
    location = /_jwks_uri_server_default/jwt-policy {
        internal;
        proxy_method GET;
        proxy_set_header Content-Length "";
        proxy_cache jwks_uri_cafe;
        proxy_cache_valid 200 12h;
        proxy_set_header Host idp.spec.example.com;
        set $idp_backend idp.spec.example.com;
        proxy_pass https://$idp_backend:443/spec-keys;
    }
    location = /_jwks_uri_server_default/jwt-policy-route {
        internal;
        proxy_method GET;
        proxy_set_header Content-Length "";
        proxy_cache jwks_uri_cafe;
        proxy_cache_valid 200 12h;
        proxy_set_header Host idp.route.example.com;
        set $idp_backend idp.route.example.com;
        proxy_pass http://$idp_backend:80/route-keys;
    }

    

    
    location /tea {
        set $service "tea-svc";
        status_zone "tea-svc";
        auth_jwt "Route Realm API" token=$http_token;
        
        auth_jwt_key_cache 1h;
        auth_jwt_key_request /_jwks_uri_server_default/jwt-policy-route;

        
        set $default_connection_header close;
        proxy_connect_timeout ;
        proxy_read_timeout ;
        proxy_send_timeout ;
        client_max_body_size ;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://vs_default_cafe_tea;
        proxy_next_upstream ;
        proxy_next_upstream_timeout ;
        proxy_next_upstream_tries 0;
    }
    location /coffee {
        set $service "coffee-svc";
        status_zone "coffee-svc";
        auth_jwt "Route Realm API" token=$http_token;
        
        auth_jwt_key_cache 1h;
        auth_jwt_key_request /_jwks_uri_server_default/jwt-policy-route;

        
        set $default_connection_header close;
        proxy_connect_timeout ;
        proxy_read_timeout ;
        proxy_send_timeout ;
        client_max_body_size ;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://vs_default_cafe_coffee;
        proxy_next_upstream ;
        proxy_next_upstream_timeout ;
        proxy_next_upstream_tries 0;
    }
}

---

[TestExecuteVirtualServerTemplateWithJWKSWithoutToken - 1]

upstream vs_default_cafe_tea {
    zone vs_default_cafe_tea ;
    server 10.0.0.20:80 max_fails=0 fail_timeout= max_conns=0;
    keepalive 16;
}

upstream vs_default_cafe_coffee {
    zone vs_default_cafe_coffee ;
    server 10.0.0.30:80 max_fails=0 fail_timeout= max_conns=0;
    keepalive 16;
}

proxy_cache_path /var/cache/nginx/jwks_uri_cafe levels=1 keys_zone=jwks_uri_cafe:1m max_size=10m;

server {
    listen 80;
    listen [::]:80;


    server_name cafe.example.com;
    status_zone cafe.example.com;
    set $resource_type "virtualserver";
    set $resource_name "cafe";
    set $resource_namespace "default";

    server_tokens "";
    auth_jwt "Spec Realm API";
    
    auth_jwt_key_cache 1h;
    auth_jwt_key_request /_jwks_uri_server_default/jwt-policy;
    location = /_jwks_uri_server_default/jwt-policy {
        internal;
        proxy_method GET;
        proxy_set_header Content-Length "";
        proxy_cache jwks_uri_cafe;
        proxy_cache_valid 200 12h;
        proxy_set_header Host idp.spec.example.com;
        set $idp_backend idp.spec.example.com;
        proxy_pass https://$idp_backend:443/spec-keys;
    }
    location = /_jwks_uri_server_default/jwt-policy-route {
        internal;
        proxy_method GET;
        proxy_set_header Content-Length "";
        proxy_cache jwks_uri_cafe;
        proxy_cache_valid 200 12h;
        proxy_set_header Host idp.route.example.com;
        set $idp_backend idp.route.example.com;
        proxy_pass http://$idp_backend:80/route-keys;
    }

    

    
    location /tea {
        set $service "tea-svc";
        status_zone "tea-svc";
        auth_jwt "Route Realm API";
        
        auth_jwt_key_cache 1h;
        auth_jwt_key_request /_jwks_uri_server_default/jwt-policy-route;

        
        set $default_connection_header close;
        proxy_connect_timeout ;
        proxy_read_timeout ;
        proxy_send_timeout ;
        client_max_body_size ;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://vs_default_cafe_tea;
        proxy_next_upstream ;
        proxy_next_upstream_timeout ;
        proxy_next_upstream_tries 0;
    }
    location /coffee {
        set $service "coffee-svc";
        status_zone "coffee-svc";
        auth_jwt "Route Realm API";
        
        auth_jwt_key_cache 1h;
        auth_jwt_key_request /_jwks_uri_server_default/jwt-policy-route;

        
        set $default_connection_header close;
        proxy_connect_timeout ;
        proxy_read_timeout ;
        proxy_send_timeout ;
        client_max_body_size ;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://vs_default_cafe_coffee;
        proxy_next_upstream ;
        proxy_next_upstream_timeout ;
        proxy_next_upstream_tries 0;
    }
}

---

[TestExecuteVirtualServerTemplate_RendersOSSTemplateWithHTTP2Off - 1]

server {
    listen 80 proxy_protocol;
    listen [::]:80 proxy_protocol;


    server_name example.com;

    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 443 ssl proxy_protocol;
    listen [::]:443 ssl proxy_protocol;

    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";

        
        set $default_connection_header close;
    }
        
    
}

---

[TestExecuteVirtualServerTemplate_RendersOSSTemplateWithHTTP2On - 1]

server {
    listen 80 proxy_protocol;
    listen [::]:80 proxy_protocol;


    server_name example.com;

    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 443 ssl proxy_protocol;
    listen [::]:443 ssl proxy_protocol;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";

        
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplate_RendersPlusTemplateWithHTTP2Off - 1]


server {
    listen 80 proxy_protocol;
    listen [::]:80 proxy_protocol;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 443 ssl proxy_protocol;
    listen [::]:443 ssl proxy_protocol;

    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
        
    
}

---

[TestExecuteVirtualServerTemplate_RendersPlusTemplateWithHTTP2On - 1]


server {
    listen 80 proxy_protocol;
    listen [::]:80 proxy_protocol;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 443 ssl proxy_protocol;
    listen [::]:443 ssl proxy_protocol;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithCustomListener - 1]


server {
    listen 8082;
    listen [::]:8082;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 8443 ssl;
    listen [::]:8443 ssl;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithCustomListenerHTTPIPV4Only - 1]


server {
    listen 127.0.0.1:8082;
    listen [::]:8082;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    
    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithCustomListenerHTTPIPV6Only - 1]


server {
    listen 8082;
    listen [::1]:8082;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    
    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithCustomListenerHTTPOnly - 1]


server {
    listen 8082;
    listen [::]:8082;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithCustomListenerHTTPSIPV4Only - 1]


server {
    

    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 127.0.0.2:8443 ssl;
    listen [::]:8443 ssl;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithCustomListenerHTTPSIPV6Only - 1]


server {
    

    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 8443 ssl;
    listen [::2]:8443 ssl;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithCustomListenerHTTPSOnly - 1]


server {
    

    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 8443 ssl;
    listen [::]:8443 ssl;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithCustomListenerIP - 1]


server {
    listen 127.0.0.1:8082;
    listen [::1]:8082;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 127.0.0.2:8443 ssl;
    listen [::2]:8443 ssl;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithRateLimitJWTClaim - 1]

auth_jwt_claim_set $jwt_default_webapp_group_consumer_group_type consumer_group type;
map $jwt_default_webapp_group_consumer_group_type $rate_limit_default_webapp_group_consumer_group_type {
    default Group3;
    Gold Group1;
    Silver Group2;
    Bronze Group3;
}
map $rate_limit_default_webapp_group_consumer_group_type $http_gold {
    default '';
    Group1 $jwt_claim_sub;
}
map $rate_limit_default_webapp_group_consumer_group_type $http_silver {
    default '';
    Group2 $jwt_claim_sub;
}
map $rate_limit_default_webapp_group_consumer_group_type $http_bronze {
    default '';
    Group3 $jwt_claim_sub;
}
# HTTP snippet
limit_req_zone $url zone=pol_rl_test_test_test:10m rate=10r/s;

server {
    listen 80;
    listen [::]:80;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";

    server_tokens "off";
    limit_req_log_level error;
    limit_req_status 503;
    limit_req zone=pol_rl_test_test_test burst=5 delay=10;

    

    
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithServerGunzipNotSet - 1]


server {
    listen 80;
    listen [::]:80;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithServerGunzipOff - 1]


server {
    listen 80;
    listen [::]:80;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithServerGunzipOn - 1]


server {
    gunzip on;
    listen 80;
    listen [::]:80;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
}

---

[TestExecuteVirtualServerTemplate_RendersTemplateWithSessionCookieSameSite - 1]

upstream test-upstream {
    zone test-upstream ;
    server 10.0.0.20:8001 max_fails=0 fail_timeout= max_conns=0;
    sticky cookie test expires=25s samesite=strict path=/tea;
}


server {
    listen 80;
    listen [::]:80;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";

    server_tokens "";

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
}

---

[TestTLSPassthroughHosts - 1]
# mapping between TLS Passthrough hosts and unix sockets

app.example.com unix:/var/lib/nginx/passthrough-default_secure-app.sock;


---

[TestTransportServerForNginx - 1]

upstream udp-upstream {
    zone udp-upstream 512k;
    server 10.0.0.20:5001 max_fails=0 fail_timeout= max_conns=0;
}
server {
    proxy_requests 1;
    proxy_responses 2;

    proxy_pass udp-upstream;

    proxy_timeout 10s;
    proxy_connect_timeout 10s;
    proxy_next_upstream on;
    proxy_next_upstream_timeout 10s;
    proxy_next_upstream_tries 5;
}

---

[TestTransportServerWithSSL - 1]

upstream udp-upstream {
    zone udp-upstream 512k;
    server 10.0.0.20:5001 max_fails=0 fail_timeout= max_conns=0;
}


match match_udp-upstream {
    
    send "GET / HTTP/1.0\r\nHost: localhost\r\n\r\n";
    

    
    expect ~* "200 OK";
    
}
server {
    listen 1234 ssl udp;
    listen [::]:1234 ssl udp;

    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;

    status_zone udp-app;
    proxy_requests 1;
    proxy_responses 2;

    proxy_pass udp-upstream;

    
    health_check interval=5s  port=8080
        passes=1 jitter=0 fails=1 udp match=match_udp-upstream;
    health_check_timeout 5s;
    

    proxy_timeout 10s;
    proxy_connect_timeout 10s;
    proxy_next_upstream on;
    proxy_next_upstream_timeout 10s;
    proxy_next_upstream_tries 5;
}

---

[TestVirtualServerForNginx - 1]

upstream test-upstream {zone test-upstream 256k;
    random;
    server 10.0.0.20:8001 max_fails=4 fail_timeout=10s max_conns=31;
    keepalive 32;
}

upstream coffee-v1 {zone coffee-v1 256k;
    server 10.0.0.31:8001 max_fails=8 fail_timeout=15s max_conns=2;
}

upstream coffee-v2 {zone coffee-v2 256k;
    server 10.0.0.32:8001 max_fails=12 fail_timeout=20s max_conns=4;
}

split_clients $request_id $split_0 {
    50% @loc0;
    50% @loc1;
}
map $match_0_0 $match {
    ~^1 @match_loc_0;
    default @match_loc_default;
}
map $http_x_version $match_0_0 {
    v2 1;
    default 0;
}
# HTTP snippet
limit_req_zone $url zone=pol_rl_test_test_test:10m rate=10r/s;
server {
    listen 80 proxy_protocol;
    listen [::]:80 proxy_protocol;


    server_name example.com;

    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 443 ssl proxy_protocol;
    listen [::]:443 ssl proxy_protocol;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;
    ssl_client_certificate ingress-mtls-secret;
    ssl_verify_client on;
    ssl_verify_depth 2;
    if ($scheme = 'http') {
        return 301 https://$host$request_uri;
    }

    server_tokens "off";
    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Real-IP;
    real_ip_recursive on;
    allow 127.0.0.1;
    deny all;
    deny 127.0.0.1;
    allow all;
    limit_req_log_level error;
    limit_req_status 503;
    limit_req zone=pol_rl_test_test_test burst=5 delay=10;
    # server snippet
    location /split {
        rewrite ^ @split_0 last;
    }
    location /coffee {
        rewrite ^ @match last;
    }
    location @vs_cafe_cafe_vsr_tea_tea_tea__tea_error_page_0 {
        
        default_type "application/json";
        
        
        # status code is ignored here, using 0
        return 0 "Hello World";
    }
    
    location @vs_cafe_cafe_vsr_tea_tea_tea__tea_error_page_1 {
        
        
        add_header Set-Cookie "cookie1=test" always;
        
        add_header Set-Cookie "cookie2=test; Secure" always;
        
        # status code is ignored here, using 0
        return 0 "Hello World";
    }
    

    
    location @return_0 {
        default_type "text/html";
        
        # status code is ignored here, using 0
        return 0 "Hello!";
    }
    

    
    location / {
        set $service "";
        internal;
        # location snippet
        allow 127.0.0.1;
        deny all;
        deny 127.0.0.1;
        allow all;
        limit_req zone=loc_pol_rl_test_test_test;

        
        proxy_ssl_certificate egress-mtls-secret.pem;
        proxy_ssl_certificate_key egress-mtls-secret.pem;
            
        proxy_ssl_trusted_certificate trusted-cert.pem;
        proxy_ssl_verify on;
        proxy_ssl_verify_depth 1;
        proxy_ssl_protocols TLSv1.3;
        proxy_ssl_ciphers DEFAULT;
        proxy_ssl_session_reuse on;
        proxy_ssl_server_name on;
        proxy_ssl_name ;
        set $default_connection_header close;
        rewrite $request_uri $request_uri;
        rewrite $request_uri $request_uri;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;
        proxy_max_temp_file_size 1024m;

        proxy_buffering on;
        proxy_buffers 8 4k;
        proxy_buffer_size 4k;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header Header;
        proxy_pass_header Host;
        proxy_ignore_headers Cache;
        add_header Header-Name "Header Value" always;
        proxy_pass http://test-upstream$request_uri;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc0 {
        set $service "";

        
        error_page 400 500 =200 "@error_page_1";
        error_page 500  "@error_page_2";
        proxy_intercept_errors on;
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v1;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc1 {
        set $service "";

        
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v2;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc2 {
        set $service "";

        
        error_page 400 = @grpc_internal;
        error_page 401 = @grpc_unauthenticated;
        error_page 403 = @grpc_permission_denied;
        error_page 404 = @grpc_unimplemented;
        error_page 429 = @grpc_unavailable;
        error_page 502 = @grpc_unavailable;
        error_page 503 = @grpc_unavailable;
        error_page 504 = @grpc_unavailable;
        error_page 405 = @grpc_internal;
        error_page 408 = @grpc_deadline_exceeded;
        error_page 413 = @grpc_resource_exhausted;
        error_page 414 = @grpc_resource_exhausted;
        error_page 415 = @grpc_internal;
        error_page 426 = @grpc_internal;
        error_page 495 = @grpc_unauthenticated;
        error_page 496 = @grpc_unauthenticated;
        error_page 497 = @grpc_internal;
        error_page 500 = @grpc_internal;
        error_page 501 = @grpc_internal;
        set $default_connection_header close;
        grpc_connect_timeout 30s;
        grpc_read_timeout 31s;
        grpc_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        grpc_set_header X-Forwarded-Host $host;
        grpc_set_header X-Forwarded-Port $server_port;
        grpc_set_header X-Forwarded-Proto $scheme;
        grpc_pass grpc://coffee-v3;
        grpc_next_upstream ;
        grpc_next_upstream_timeout ;
        grpc_next_upstream_tries 0;
    }
    location @match_loc_0 {
        set $service "";

        
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v2;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @match_loc_default {
        set $service "";

        
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v1;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location /return {
        set $service "";

        
        error_page 418 =200 "@return_0";
        proxy_intercept_errors on;
        proxy_pass http://unix:/var/lib/nginx/nginx-418-server.sock;
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestVirtualServerForNginxPlus - 1]

upstream test-upstream {
    zone test-upstream 256k;
    random;
    server 10.0.0.20:8001 max_fails=4 fail_timeout=10s slow_start=10s max_conns=31;
    keepalive 32;
    queue 10 timeout=60s;
    sticky cookie test expires=25s path=/tea;
    ntlm;
}

upstream coffee-v1 {
    zone coffee-v1 256k;
    server 10.0.0.31:8001 max_fails=8 fail_timeout=15s max_conns=2;
}

upstream coffee-v2 {
    zone coffee-v2 256k;
    server 10.0.0.32:8001 max_fails=12 fail_timeout=20s max_conns=4;
}

split_clients $request_id $split_0 {
    50% @loc0;
    50% @loc1;
}
map $match_0_0 $match {
    ~^1 @match_loc_0;
    default @match_loc_default;
}
map $http_x_version $match_0_0 {
    v2 1;
    default 0;
}
# HTTP snippet
limit_req_zone $url zone=pol_rl_test_test_test:10m rate=10r/s;

server {
    listen 80 proxy_protocol;
    listen [::]:80 proxy_protocol;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";
    listen 443 ssl proxy_protocol;
    listen [::]:443 ssl proxy_protocol;

    http2 on;
    ssl_certificate cafe-secret.pem;
    ssl_certificate_key cafe-secret.pem;
    ssl_client_certificate ingress-mtls-secret;
    ssl_verify_client on;
    ssl_verify_depth 2;
    if ($scheme = 'http') {
        return 301 https://$host$request_uri;
    }

    server_tokens "off";
    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Real-IP;
    real_ip_recursive on;
    allow 127.0.0.1;
    deny all;
    deny 127.0.0.1;
    allow all;
    limit_req_log_level error;
    limit_req_status 503;
    limit_req zone=pol_rl_test_test_test burst=5 delay=10;
    auth_jwt "My Api";
    auth_jwt_key_file jwk-secret;
    app_protect_enable on;
    app_protect_policy_file /etc/nginx/waf/nac-policies/default-dataguard-alarm;
    app_protect_security_log_enable on;
    app_protect_security_log /etc/nginx/waf/nac-logconfs/default-logconf;
    
    # server snippet
    location /split {
        rewrite ^ @split_0 last;
    }
    location /coffee {
        rewrite ^ @match last;
    }
    location @hc-coffee {
        
        proxy_connect_timeout ;
        proxy_read_timeout ;
        proxy_send_timeout ;
        proxy_pass http://coffee-v2;
        health_check uri=/  port=50 interval=5s jitter=0s fails=1 passes=1 mandatory  persistent  keepalive_time=60s;

   }
    location @hc-tea {
        
        grpc_connect_timeout ;
        grpc_read_timeout ;
        grpc_send_timeout ;
        grpc_pass grpc://tea-v3;
        health_check port=50 interval=5s jitter=0s fails=1 passes=1 type=grpc grpc_status=12 grpc_service=tea-servicev2;

   }
    location @vs_cafe_cafe_vsr_tea_tea_tea__tea_error_page_0 {
        
        default_type "application/json";
        
        
        # status code is ignored here, using 0
        return 0 "Hello World";
    }
    
    location @vs_cafe_cafe_vsr_tea_tea_tea__tea_error_page_1 {
        
        
        add_header Set-Cookie "cookie1=test" always;
        
        add_header Set-Cookie "cookie2=test; Secure" always;
        
        # status code is ignored here, using 0
        return 0 "Hello World";
    }
    

    
    location @return_0 {
        default_type "text/html";
        
        # status code is ignored here, using 0
        return 0 "Hello!";
    }
    

    
    location / {
        set $service "";
        status_zone "";
        internal;
        # location snippet
        allow 127.0.0.1;
        deny all;
        deny 127.0.0.1;
        allow all;
        limit_req zone=loc_pol_rl_test_test_test;

        
        proxy_ssl_certificate egress-mtls-secret.pem;
        proxy_ssl_certificate_key egress-mtls-secret.pem;
            
        proxy_ssl_trusted_certificate trusted-cert.pem;
        proxy_ssl_verify on;
        proxy_ssl_verify_depth 1;
        proxy_ssl_protocols TLSv1.3;
        proxy_ssl_ciphers DEFAULT;
        proxy_ssl_session_reuse on;
        proxy_ssl_server_name on;
        proxy_ssl_name ;
        set $default_connection_header close;
        rewrite $request_uri $request_uri;
        rewrite $request_uri $request_uri;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;
        proxy_max_temp_file_size 1024m;

        proxy_buffering on;
        proxy_buffers 8 4k;
        proxy_buffer_size 4k;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header Header;
        proxy_pass_header Host;
        proxy_ignore_headers Cache;
        add_header Header-Name "Header Value" always;
        proxy_pass http://test-upstream$request_uri;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc0 {
        set $service "";
        status_zone "";

        
        error_page 400 500 =200 "@error_page_1";
        error_page 500  "@error_page_2";
        proxy_intercept_errors on;
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v1;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc1 {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v2;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @loc2 {
        set $service "";
        status_zone "";

        
        error_page 400 = @grpc_internal;
        error_page 401 = @grpc_unauthenticated;
        error_page 403 = @grpc_permission_denied;
        error_page 404 = @grpc_unimplemented;
        error_page 429 = @grpc_unavailable;
        error_page 502 = @grpc_unavailable;
        error_page 503 = @grpc_unavailable;
        error_page 504 = @grpc_unavailable;
        error_page 405 = @grpc_internal;
        error_page 408 = @grpc_deadline_exceeded;
        error_page 413 = @grpc_resource_exhausted;
        error_page 414 = @grpc_resource_exhausted;
        error_page 415 = @grpc_internal;
        error_page 426 = @grpc_internal;
        error_page 495 = @grpc_unauthenticated;
        error_page 496 = @grpc_unauthenticated;
        error_page 497 = @grpc_internal;
        error_page 500 = @grpc_internal;
        error_page 501 = @grpc_internal;
        set $default_connection_header close;
        grpc_connect_timeout 30s;
        grpc_read_timeout 31s;
        grpc_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        grpc_set_header X-Forwarded-Host $host;
        grpc_set_header X-Forwarded-Port $server_port;
        grpc_set_header X-Forwarded-Proto $scheme;
        grpc_pass grpc://coffee-v3;
        grpc_next_upstream ;
        grpc_next_upstream_timeout ;
        grpc_next_upstream_tries 0;
    }
    location @match_loc_0 {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v2;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location @match_loc_default {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
        proxy_connect_timeout 30s;
        proxy_read_timeout 31s;
        proxy_send_timeout 32s;
        client_max_body_size 1m;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $vs_connection_header;
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://coffee-v1;
        proxy_next_upstream error timeout;
        proxy_next_upstream_timeout 5s;
        proxy_next_upstream_tries 0;
    }
    location /return {
        set $service "";
        status_zone "";

        
        error_page 418 =200 "@return_0";
        proxy_intercept_errors on;
        proxy_pass http://unix:/var/lib/nginx/nginx-418-server.sock;
        set $default_connection_header close;
    }
        
    location @grpc_deadline_exceeded {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 4;
        add_header grpc-message 'deadline exceeded';
        return 204;
    }

    location @grpc_permission_denied {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 7;
        add_header grpc-message 'permission denied';
        return 204;
    }

    location @grpc_resource_exhausted {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 8;
        add_header grpc-message 'resource exhausted';
        return 204;
    }

    location @grpc_unimplemented {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 12;
        add_header grpc-message unimplemented;
        return 204;
    }

    location @grpc_internal {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 13;
        add_header grpc-message 'internal error';
        return 204;
    }

    location @grpc_unavailable {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message unavailable;
        return 204;
    }

    location @grpc_unauthenticated {
        default_type application/grpc;
        add_header content-type application/grpc;
        add_header grpc-status 16;
        add_header grpc-message unauthenticated;
        return 204;
    }

        
    
}

---

[TestVirtualServerForNginxPlusWithWAFApBundle - 1]


server {
    listen 80;
    listen [::]:80;


    server_name example.com;
    status_zone example.com;
    set $resource_type "virtualserver";
    set $resource_name "";
    set $resource_namespace "";

    server_tokens "";
    app_protect_enable on;
    app_protect_policy_file /fake/bundle/path/NginxDefaultPolicy.tgz;
    app_protect_security_log_enable on;
    app_protect_security_log /etc/nginx/waf/nac-logconfs/default-logconf;
    

    

    
    location / {
        set $service "";
        status_zone "";

        
        set $default_connection_header close;
    }
}

---
